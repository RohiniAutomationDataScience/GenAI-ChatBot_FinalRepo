{"name": "Validate EN↔AR response consistency for paired prompts", "status": "failed", "statusDetails": {"message": "AssertionError: Login form not found: #email/#password/Sign in", "trace": "page = <Page url='https://govgpt.sandbox.dge.gov.ae/'>\nconfig = {'base_url': 'https://govgpt.sandbox.dge.gov.ae/', 'browser': 'chromium', 'email': 'farrukh.mohsin@northbaysolutions.net', 'headless': False, ...}\n\n    @pytest.fixture()\n    def logged_in_page(page, config):\n>       return login(page, config[\"base_url\"], config[\"email\"], config[\"password\"])\n\nconftest.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nlib\\utils\\auth.py:96: in login\n    _fill_credentials_and_submit(page, email, password)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npage = <Page url='https://govgpt.sandbox.dge.gov.ae/'>, email = 'farrukh.mohsin@northbaysolutions.net'\npassword = 'test', timeout = 15000\n\n    def _fill_credentials_and_submit(page: Page, email: str, password: str, timeout: int = 15000) -> None:\n        filled = False\n        try:\n            e = page.locator(\"#email\").first\n            p = page.locator(\"#password\").first\n            if e.count() and p.count():\n                expect(e).to_be_visible(timeout=timeout)\n                e.fill(email)\n                expect(p).to_be_visible()\n                p.fill(password)\n                s = page.locator(\"//button[@type='submit' and normalize-space()='Sign in']\").first\n                expect(s).to_be_enabled()\n                s.click()\n                filled = True\n        except Exception:\n            pass\n        if not filled:\n            for f in page.frames:\n                try:\n                    e = f.locator(\"#email\").first\n                    p = f.locator(\"#password\").first\n                    if e.count() and p.count():\n                        expect(e).to_be_visible(timeout=timeout)\n                        e.fill(email)\n                        expect(p).to_be_visible()\n                        p.fill(password)\n                        s = f.locator(\"//button[@type='submit' and normalize-space()='Sign in']\").first\n                        expect(s).to_be_enabled()\n                        s.click()\n                        filled = True\n                        break\n                except Exception:\n                    continue\n        if not filled:\n>           raise AssertionError(\"Login form not found: #email/#password/Sign in\")\nE           AssertionError: Login form not found: #email/#password/Sign in\n\nlib\\utils\\auth.py:72: AssertionError"}, "description": "\nObjective:\nTo ensure the AI provides consistent answers when asked similar questions\nin English and Arabic, maintaining intent and meaning.\n", "parameters": [{"name": "pair", "value": "({'id': 'eid_en', 'lang': 'en', 'user': 'How do I renew my Emirates ID?', 'golden': 'Renew your Emirates ID through the ICP Smart Services portal. Submit biometrics if required and pay the renewal fee.', 'threshold': 0.8, 'must_contain': ['ICP', 'Emirates ID', 'biometric']}, {'id': 'eid_ar', 'lang': 'ar', 'user': 'كيف أجدد بطاقة الهوية الإماراتية؟', 'golden': 'قم بتجديد بطاقة الهوية الإماراتية عبر منصة الخدمات الذكية ICP ودفع الرسوم وتقديم البيانات الحيوية إذا لزم الأمر.', 'xl_threshold': 0.8, 'must_contain': ['ICP', 'بطاقة الهوية', 'البيانات الحيوية']})"}], "start": 1755619470533, "stop": 1755619470533, "uuid": "caf1533c-d3c5-4557-a0ac-8b68838780f8", "historyId": "6c80d07d257527c2fe512efe1367cb50", "testCaseId": "c1ade53140c32ae7dc69f244b262fe50", "fullName": "tests.genai.test_semantic#test_semantic_en_ar_consistency", "labels": [{"name": "story", "value": "Responses should be semantically consistent across English and Arabic prompts"}, {"name": "epic", "value": "English <-> Arabic semantic consistency"}, {"name": "feature", "value": "Multilingual Semantic Consistency"}, {"name": "parentSuite", "value": "tests.genai"}, {"name": "suite", "value": "test_semantic"}, {"name": "host", "value": "LAPTOP-ITSGITUD"}, {"name": "thread", "value": "8660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.genai.test_semantic"}]}