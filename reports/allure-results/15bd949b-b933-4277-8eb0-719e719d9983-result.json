{"name": "Validate fallback response for invalid/gibberish input - Loading states and fallback messages", "status": "failed", "statusDetails": {"message": "AssertionError: Low similarity to golden fallback response (0.66)\nassert 0.65511155128479 >= 0.8\n +  where 0.8 = <built-in method get of dict object at 0x0000016A9DAE1180>('threshold', 0.8)\n +    where <built-in method get of dict object at 0x0000016A9DAE1180> = {'golden': 'عذرًا، لم أفهم ذلك. هل يمكنك إعادة الصياغة أو توضيح ما تعنيه؟', 'id': 'fallback_test_ar', 'lang': 'ar', 'must_contain': ['عذرًا', 'إعادة الصياغة', 'توضيح'], ...}.get", "trace": "logged_in_page = <Page url='https://govgpt.sandbox.dge.gov.ae/c/fb42e124-5a3d-4aa0-a18f-474c8b868a36'>\ncase = {'golden': 'عذرًا، لم أفهم ذلك. هل يمكنك إعادة الصياغة أو توضيح ما تعنيه؟', 'id': 'fallback_test_ar', 'lang': 'ar', 'must_contain': ['عذرًا', 'إعادة الصياغة', 'توضيح'], ...}\n\n    @allure.epic(\"Fallback message appears for gibberish/invalid input\")\n    @allure.feature(\"Fallback Handling\")\n    @allure.story(\"System should show fallback messages for gibberish or unclear input\")\n    @allure.title(\"Validate fallback response for invalid/gibberish input - Loading states and fallback messages\")\n    @allure.description(\"\"\"\n    Objective:\n    To ensure that when a user provides an unclear or malformed query (e.g., gibberish or special characters),\n    the system responds with a proper fallback message such as 'Sorry, I didn’t catch that...'\n    \"\"\")\n    @pytest.mark.parametrize(\"case\", [c for c in DATA[\"prompts\"] if \"fallback_test\" in c.get(\"id\", \"\")])\n    def test_fallback_message_shown(logged_in_page, case):\n        page = logged_in_page\n        ans = _send(page, case[\"user\"])\n        allure.attach(ans, \"fallback_response\", allure.attachment_type.TEXT)\n    \n        # Basic similarity check if golden present\n        if \"golden\" in case:\n            score = sim_xl(ans, case[\"golden\"])\n            allure.attach(f\"{score:.3f}\", f\"sim_score::{case['id']}\", allure.attachment_type.TEXT)\n>           assert score >= case.get(\"threshold\", 0.80), f\"Low similarity to golden fallback response ({score:.2f})\"\nE           AssertionError: Low similarity to golden fallback response (0.66)\nE           assert 0.65511155128479 >= 0.8\nE            +  where 0.8 = <built-in method get of dict object at 0x0000016A9DAE1180>('threshold', 0.8)\nE            +    where <built-in method get of dict object at 0x0000016A9DAE1180> = {'golden': 'عذرًا، لم أفهم ذلك. هل يمكنك إعادة الصياغة أو توضيح ما تعنيه؟', 'id': 'fallback_test_ar', 'lang': 'ar', 'must_contain': ['عذرًا', 'إعادة الصياغة', 'توضيح'], ...}.get\n\ntests\\genai\\test_quality_extras.py:195: AssertionError"}, "description": "\nObjective:\nTo ensure that when a user provides an unclear or malformed query (e.g., gibberish or special characters), \nthe system responds with a proper fallback message such as 'Sorry, I didn’t catch that...'\n", "attachments": [{"name": "fallback_response", "source": "ebdb2937-52fd-4daa-8de9-8c01dcd11aec-attachment.txt", "type": "text/plain"}, {"name": "sim_score::fallback_test_ar", "source": "7848cdcd-dc6a-4c86-be4c-6a13e0c34420-attachment.txt", "type": "text/plain"}, {"name": "FAILED_test_fallback_message_shown[case1]", "source": "44d7dc1f-7e8d-4d35-a1c1-307d4c68db60-attachment.png", "type": "image/png"}, {"name": "DOM_test_fallback_message_shown[case1]", "source": "f6089784-bf6a-425d-8b98-e8d160c9edbf-attachment.html", "type": "text/html"}], "parameters": [{"name": "case", "value": "{'id': 'fallback_test_ar', 'lang': 'ar', 'user': '!@#$٪^&*() معلومات غير مفهومة 123', 'golden': 'عذرًا، لم أفهم ذلك. هل يمكنك إعادة الصياغة أو توضيح ما تعنيه؟', 'xl_threshold': 0.8, 'must_contain': ['عذرًا', 'إعادة الصياغة', 'توضيح']}"}], "start": 1755619217360, "stop": 1755619222499, "uuid": "6233872b-aaee-4990-8524-cdc53b189939", "historyId": "8a3330dcedde7014d854e9cb193eba9d", "testCaseId": "a8f80df711e985b6f8fa7e34c220611c", "fullName": "tests.genai.test_quality_extras#test_fallback_message_shown", "labels": [{"name": "feature", "value": "Fallback Handling"}, {"name": "story", "value": "System should show fallback messages for gibberish or unclear input"}, {"name": "epic", "value": "Fallback message appears for gibberish/invalid input"}, {"name": "parentSuite", "value": "tests.genai"}, {"name": "suite", "value": "test_quality_extras"}, {"name": "host", "value": "LAPTOP-ITSGITUD"}, {"name": "thread", "value": "8660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.genai.test_quality_extras"}]}